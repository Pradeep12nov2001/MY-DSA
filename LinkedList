class LL {
    Node head, tail;
    int size;

    class Node {    // Node Class
        int data;
        Node next;

        Node(int d) {
            data = d;
            next = null;
        }
    }

    void addFirst(int d) {       //addFirst method
        Node n = new Node(d);
        if (head == null) {
            head = tail = n;
        } else {
            n.next = head;
            head = n;
        }
        size++;
    }

    void addLast(int d) {           //addLast method
        Node n = new Node(d);
        if (head == null) {
            head = tail = n;
        } else {
            tail.next = n;
            tail = n;
        }
        size++;
    }


    void removeFirst() {                 // removeFirst method
        if (head == null) {
            System.out.println("List is Empty");
        } else {
            head = head.next;
        }
        size--;
    }

    void removeLast() {                //removeLast method

        if (head == null || head.next == null) {
            head = null;
        } else {
            Node temp = head;
            while (temp.next.next != null) {
                temp = temp.next;
            }
            temp.next = null;
        }

    }

    void printList() {                     //printList method
        Node curr = head;
        while (curr != null) {
            if (curr == null) {
                System.out.println("List is Empty");
            } else {
                System.out.print(curr.data + " --> ");
                curr = curr.next;
            }
        }
        System.out.println();
    }

    public static void main(String[] args) {

        LL list = new LL();

        list.addLast(2);
        list.addLast(4);
        list.addLast(6);
        list.addLast(8);
        list.addLast(10);

        list.printList();

        list.addFirst(20);
        list.addFirst(40);

        list.printList();

        list.removeLast();

        list.printList();
    }
}
